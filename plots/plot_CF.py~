import matplotlib as mpl
import matplotlib.pyplot as plt
import csv
import numpy as np
import cPickle as pickle
from custom_modules.plot_setting import *

# This script plots the time course of the recurrent exc. connection fraction for different simulation protocols

# where to save figure
savefolder = plots_base_folder + "syn_topology/"
plot_filename = "CF_plot"

## ordering of data in list
#0:diff h. + topol
#1:non-diff h. + topol
#2:diff h. + no topol
#3:non-diff h. + no topol

# where to find data
source = ["CF_dataset/CF_eTOe.csv",
			"CF_dataset_non_diff/CF_eTOe.csv",
			"CF_dataset_no_topology/CF_eTOe.csv",
			"CF_dataset_non_diff_no_topology/CF_eTOe.csv"]
# List of plot labels
labels = ["Diffusive Homeostasis, topology",
			"Non-Diffusive Homeostasis, topology",
			"Diffusive Homeostasis, no topology",
			"Non-Diffusive Homeostasis, no topology"]
# initialize list of conn. fractions
CF = []

# load data
for k in xrange(4):
	cf = []
	with open(sim_data_base_folder+source[k],"rb") as csvfile:
		reader = csv.reader(csvfile)
		# each row is a single simulation dataset
		for row in reader:
			cf.append(np.array(row).astype("float"))
	cf = np.array(cf).T
	# calculate mean and standard error over simulation trials
	cf_m = cf.mean(axis=1)
	cf_err = cf.std(axis=1)/np.sqrt(cf.shape[1])
	
	# append values to CF list
	CF.append([cf_m,cf_err])

# time range for plotting
t = range(CF[0][0].shape[0])

fig = plt.figure(figsize=(default_fig_width,default_fig_width*0.6))

# plot time courses of CFs (line width is standard error)
for k in xrange(4):
	plt.fill_between(t,CF[k][0]-CF[k][1],CF[k][0]+CF[k][1],color=mpl.rcParams['axes.color_cycle'][k])
	plt.plot(t,CF[k][0],c=mpl.rcParams['axes.color_cycle'][k],label=labels[k],lw=0.5)



plt.xlabel("t [s]")
plt.ylabel("Connection Fraction")
plt.xlim([t[0],t[-1]])
plt.ylim([0.,0.13])
plt.legend(loc=4)

# save figure
for f_f in file_format:
	plt.savefig(savefolder+plot_filename+f_f)


plt.show()
